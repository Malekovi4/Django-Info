--> $ python manage.py runserver

- Запуск сервера


--> django-admin startproject mysite

- Сетап проекта или типа того.

Чтобы создать свое приложение, убедитесь, что вы находитесь в том же каталоге, что `manage.py` и и введите эту команду:

--> py manage.py startapp polls

Вход в виртуальную среду:

--> tutorial-env\Scripts\activate.bat

Создание Виртуальной среды:

--> python -m venv tutorial-env

А потом мы в среду грузим Django и входя в нее уже прогаем все.


 Мы рассмотрим их более подробно в следующей части руководства, а пока запомните трехэтапное руководство по внесению изменений в модель:

- Измените свои модели (в `models.py`).
- Запустите , чтобы создать миграции для этих изменений[`python manage.py makemigrations`](https://docs.djangoproject.com/en/4.2/ref/django-admin/#django-admin-makemigrations)
- Запустите , чтобы применить эти изменения к базе данных.[`python manage.py migrate`](https://docs.djangoproject.com/en/4.2/ref/django-admin/#django-admin-migrate)




 

	--> py manage.py runserver

 Старт сервера


--> py manage.py shell

запрос к базе данных что ли.


__str__()  - Метод `__str__()`вызывается всякий раз, когда вы вызываете `str()`объект. Джанго использует `str(obj)`в ряде мест. В частности, для отображения объекта на сайте администрирования Django и в качестве значения, вставленного в шаблон при отображении объекта. Таким образом, вы всегда должны возвращать из метода красивое, удобочитаемое представление модели `__str__()`.
